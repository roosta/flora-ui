#+TITLE: Tincture

[[https://circleci.com/gh/roosta/tincture][file:https://circleci.com/gh/roosta/tincture.svg?style=svg]]
[[https://clojars.org/tincture][file:https://img.shields.io/clojars/v/tincture.svg]]


Tincture is a frontend toolkit for ClojureScript that provides several
utility functions, components, and definitions to aid/speed up
developing common web page visuals and functionality.

- [[https://roosta.github.io/tincture/][Documentation]]
- Demo site

** Requirements

   Tincture requires at least Clojure 1.9.0 and ClojureScript 1.9.542
   due to use of [[ https://cljs.github.io/api/cljs.spec.alpha/ ][clojure.spec.alpha]] to validate various
   input.

   The components in this library is build using [[https://github.com/reagent-project/reagent][Reagent]] API, and the
   event system used is [[https://github.com/Day8/re-frame][re-frame]]. If you'd prefer some other react
   framework, or no react at all this library is probably not for you.

** Usage
To use Tincture add this to your dependencies

[[http://clojars.org/tincture][file:http://clojars.org/tincture/latest-version.svg]]

Normally Tincture includes [[https://github.com/reagent-project/reagent][Reagent]] and [[https://github.com/Day8/re-frame][re-frame]], but if you want to
use a different version of these libs exclude them from Tincture:

#+BEGIN_SRC clojure
[tincture "0.x.x" :exclusions [reagent re-frame]]
#+END_SRC

You might also optionally initialize the event system.

#+BEGIN_SRC clojure
  (ns my-project
    (:require [tincture.core :as t]))

  (defn my-init-function []
    (t/init!))
#+END_SRC

** Examples

   See [[https://roosta.github.io/tincture/][documentation]] for full overview

*** Grid component
    #+BEGIN_SRC clojure
      (ns my-project.my-ns
        (:require [tincture.grid :refer [Grid]]))

      [Grid {:container true
             :class "my-class-name"
             :spacing 16
             :justify :center}
       [Grid {:item true
              :xs 12
              :sm 6}
        [:span "column 1"]]
       [Grid {:item true
              :xs 12
              :sm 6}
        [span "column 2"]]
       [Grid {:item true
              :xs 12
              :sm 6}
        [:span "column 3"]]]
    #+END_SRC
*** Typography component
    #+BEGIN_SRC clojure
      (ns my-project.my-ns
        (:require [tincture.typography :refer [Typography]]))

      [:div
       [Typography {:variant :h3
                    :gutter-bottom true}
        "my headline"]
       [Typography
        "My body text"]]
    #+END_SRC

** Re-frame and Tincture events
*** Initialize
   Tincture uses re-frame as an event handler, and if you want to use
   Tincture's events you have to initialize it first.

   You can do this by calling ~tincture.core/init!~. Init! take a map of
   options, namely a font family and a font url. These are used in the
   typography component. If no options is provided Tincture uses
   ~["'Raleway'" "'Helvetica Neue'" "Arial" "Helvetica" "sans-serif"]~
   as a default. The url also needs to be provided if you are going to
   use a custom font face, an example of this would be:
   "https://fonts.googleapis.com/css?family=Raleway:300,400,500"
   This URL is attached to the head of the HTML dynamically.
*** Subscriptions
**** :tincture/viewport-size
     Returns a vector of the current viewport size: [width height]
**** :tincture/viewport-width
     Returns the current viewport width
**** :tincture/viewport-height
     Returns the current viewport height
**** :tincture/font
     Returns the currently used font family and url
**** :tincture.font/family
     Returns the currently used font family
**** :tincture.font/url
     Returns the currently used font url
**** :tincture/device
     Uses ~goog.labs.userAgent.device~ to return whatever device your
     site is run on.
**** :tincture/breakpoint-down
     Takes a breakpoint, one of ~#{:xs :sm :md :lg :xl}~ Returns a
     ~boolean~ that indicates if current viewport width is below the
     given breakpoint. Breakpoints are defined in
     ~tincture.core/breakpoints~ and looks like this: ~{:xs 0 :sm 600 :md
     960 :lg 1280 :xl 1920}~
**** :tincture/breakpoint-up
     Takes a breakpoint, one of ~#{:xs :sm :md :lg :xl}~ Returns a
     ~boolean~ that indicates if current viewport width is above the
     given breakpoint. Breakpoints are defined in
     ~tincture.core/breakpoints~ and looks like this: ~{:xs 0 :sm 600 :md
     960 :lg 1280 :xl 1920}~
** Disclaimer
   Tincture is not a UI framework as such, it's simply various
   functions and components I use on a regular basis being a frontend
   developer using ClojureScript. Many components in Tincture is based
   on [[https://material-ui.com/][Material UI]], and is a re-implementation of those components in
   ClojureScript. If you want a full framework I wholeheartedly
   recommend [[https://material-ui.com/][Material UI]].

** Development
   Start figwheel main with the development build
   #+BEGIN_SRC sh
     lein fig:build
   #+END_SRC

   Figwheel-main will automatically push cljs changes to the browser. Once Figwheel
   starts up, you should be able to open http://localhost:9500 for the
   development server.

** Testing
   Either run:
   #+BEGIN_SRC sh
   lein fig:test
   #+END_SRC

   For a headless test environment using chrome, make sure its
   installed on your system.

   You can also start the dev build and navigate to
   [[http://localhost:9500/figwheel-extra-main/auto-testing][http://localhost:9500/figwheel-extra-main/auto-testing]] to get a
   nice interface while coding that runs the tests on each save.

** Sources
   - [[https://github.com/roosta/tincture/blob/master/resources/gradients.json][gradients.json]] sourced from: https://github.com/Ghosh/uiGradients/
   - [[https://github.com/roosta/tincture/blob/master/src/tincture/grid.cljs][Tincture Grid]] is inspired by [[https://material-ui.com/layout/grid/][Material-ui Grid]]
   - [[https://github.com/roosta/tincture/blob/master/src/tincture/typography.cljs][Tincture Typography]] is inspired by [[https://material-ui.com/style/typography/][Material-ui Typography]]
   - [[https://github.com/roosta/tincture/blob/master/src/tincture/paper.cljs][Tincture Paper]] is inspired by [[https://material-ui.com/components/paper/][Material-ui Paper]]
